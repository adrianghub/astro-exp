---
import { Icon } from 'astro-icon';
import { t } from 'i18next';
import { SITE } from '@config';
import Hr from './Hr.astro';
import Link from './Link.astro';

export interface Props {
  activeNav?: 'articles' | 'tags' | 'about' | 'search';
}

const { activeNav } = Astro.props;
---

<header class="sticky top-0 backdrop-blur-sm">
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <Link href="/" className="logo">{t('header.title')}</Link>
      <nav id="nav-menu" class="nav-menu">
        <button
          class="hamburger-menu focus-outline"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <div class="icon-container flex">
            <div id="first-line"></div>
            <div id="second-line"></div>
            <div id="third-line"></div>
          </div>
        </button>
        <ul id="menu-items" class="display-none sm:flex">
          <li>
            <Link
              href="/articles"
              className={activeNav === 'articles' ? 'active' : ''}
            >
              {t('header.links.articles')}
            </Link>
          </li>
          <li>
            <Link href="/tags" className={activeNav === 'tags' ? 'active' : ''}>
              {t('header.links.tags')}
            </Link>
          </li>
          <li>
            <Link
              href="/about"
              className={activeNav === 'about' ? 'active' : ''}
            >
              {t('header.links.about')}
            </Link>
          </li>
          <li>
            <Link
              type="button"
              href="/search"
              className={`focus-outline p-3 sm:p-1 ${
                activeNav === 'search' ? 'active' : ''
              }`}
              ariaLabel="search"
              title="Search"
            >
              <Icon class="scale-125 sm:scale-100" name="mdi:magnify" />
            </Link>
          </li>
          <li>
            {
              SITE.lightAndDarkMode && (
                <button
                  id="theme-btn"
                  class="focus-outline"
                  title="Toggles light & dark"
                  aria-label="auto"
                  aria-live="polite"
                >
                  <Icon name="ri:moon-clear-line" id="moon-svg" />
                  <Icon name="ph:sun-dim" id="sun-svg" />
                </button>
              )
            }
          </li>
        </ul>
      </nav>
    </div>
  </div>
  <Hr />
</header>

<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent py-2 px-3 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    @apply mx-auto flex max-w-3xl flex-col items-center justify-between sm:flex-row;
  }
  .top-nav-wrap {
    @apply relative flex w-full items-start justify-between p-4 sm:items-center sm:py-8;
  }
  .logo {
    @apply absolute	w-fit whitespace-nowrap text-xl font-semibold sm:static sm:text-2xl;
  }
  .hamburger-menu {
    @apply self-end p-2 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }

  nav {
    @apply flex w-full flex-col items-center bg-skin-fill sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-y-2 gap-x-2 sm:mt-0 sm:ml-0 sm:w-auto sm:gap-y-0 sm:gap-x-5;
  }
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply w-full px-4 py-3 text-center font-medium hover:text-skin-accent sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-child(4) a {
    @apply w-auto;
  }
  nav ul li:nth-child(4),
  nav ul li:nth-child(5) {
    @apply col-span-1;
  }
  nav a.active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-6 w-6 fill-skin-base hover:fill-skin-accent;
  }
  #theme-btn {
    @apply p-3 sm:p-1;
  }
  #theme-btn svg {
    @apply scale-125 hover:rotate-12 sm:scale-100;
  }

  .icon-container {
    @apply h-5 w-6 flex-col items-end justify-between;
  }
  .icon-container div {
    @apply h-0.5 bg-skin-inverted transition-all;
  }
  #first-line {
    @apply w-full;
  }
  #second-line {
    @apply w-3/4;
  }
  #third-line {
    @apply w-1/2;
  }
</style>

<script>
  // Toggle menu
  const menuBtn = document.querySelector('.hamburger-menu');
  const menuItems = document.querySelector('#menu-items')?.classList;

  const iconContainer = document.querySelector('.icon-container')?.classList;
  const firstLine = document.querySelector('#first-line')?.classList;
  const secondLine = document.querySelector('#second-line ')?.classList;
  const thirdLine = document.querySelector('#third-line')?.classList;

  menuBtn?.addEventListener('click', () => {
    const menuExpanded = menuBtn?.getAttribute('aria-expanded');
    if (menuExpanded === 'false') {
      menuBtn?.setAttribute('aria-expanded', 'true');
      menuBtn?.setAttribute('aria-label', 'Close Menu');
      menuItems?.remove('display-none');

      // icon animation
      iconContainer?.remove('flex');
      iconContainer?.add('relative');
      firstLine?.add('rotate-45', 'absolute', 'bottom-1/2');
      thirdLine?.add('display-none');
      secondLine?.add('!w-full', '-rotate-45', 'absolute', 'bottom-1/2');
    } else {
      menuBtn?.setAttribute('aria-expanded', 'false');
      menuBtn?.setAttribute('aria-label', 'Open Menu');
      menuItems?.add('display-none');

      // icon animation
      iconContainer?.add('flex');
      iconContainer?.remove('relative');
      firstLine?.remove('rotate-45', 'absolute', 'bottom-1/2');
      thirdLine?.remove('display-none');
      secondLine?.remove('!w-full', '-rotate-45', 'absolute', 'bottom-1/2');
    }
  });
</script>
